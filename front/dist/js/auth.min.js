function Auth(){this.maskWrapper=$(".mask-wrapper")}Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.switchWrapper=function(){$(".switch").click(function(){var n=$(".scroll-wrapper"),e=n.css("left");(e=parseInt(e))<0?n.animate({left:"0"}):n.animate({left:"-400px"})})},Auth.prototype.listenShowHideEvent=function(){var n=this;console.log("hello");var e=$(".sigin-in"),t=$(".sigin-up"),i=$(".close-btn"),o=$(".scroll-wrapper");e.click(function(){n.showEvent(),o.css({left:0})}),t.click(function(){n.showEvent(),o.css({left:-400})}),i.click(function(){n.hideEvent()})},Auth.prototype.listenSigninEvent=function(){var i=this,n=$(".signin-group"),o=n.find("input[name='telephone']"),s=n.find("input[name='password']"),r=n.find("input[name='remember']");n.find(".submit-btn").click(function(){var n=o.val(),e=s.val(),t=r.prop("checked")?1:0;xfzajax.post({url:"/auth/login/",data:{telephone:n,password:e,remember:t},success:function(n){if(200==n.code)console.log(n),i.hideEvent(),window.location.reload();else{var e=n.message;if("string"==typeof e||e.constructor==String)window.messageBox.show(e);else for(key in e){var t=e[key][0].message;window.messageBox.show(t)}}},failed:function(n){console.log(n)}})})},Auth.prototype.run=function(){var n=this;n.listenShowHideEvent(),n.switchWrapper(),n.listenSigninEvent(),n.listenSmsEvent()},$(function(){(new Auth).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiQXV0aCIsInRoaXMiLCJtYXNrV3JhcHBlciIsIiQiLCJwcm90b3R5cGUiLCJzaG93RXZlbnQiLCJzaG93IiwiaGlkZUV2ZW50IiwiaGlkZSIsInN3aXRjaFdyYXBwZXIiLCJjbGljayIsInNjcm9sbFdyYXBwZXIiLCJjdXJyZW50TGVmdCIsImNzcyIsInBhcnNlSW50IiwiYW5pbWF0ZSIsImxlZnQiLCJsaXN0ZW5TaG93SGlkZUV2ZW50Iiwic2VsZiIsImNvbnNvbGUiLCJsb2ciLCJzaWdpbkJ0biIsInNpZ3VwQnRuIiwiY2xvc2VCdG4iLCJsaXN0ZW5TaWduaW5FdmVudCIsInNpZ25pbkdyb3VwIiwidGVsZXBob25lSW5wdXQiLCJmaW5kIiwicGFzc3dvcmRJbnB1dCIsInJlbWVtYmVySW5wdXQiLCJ0ZWxlcGhvbmUiLCJ2YWwiLCJwYXNzd29yZCIsInJlbWVtYmVyIiwicHJvcCIsInhmemFqYXgiLCJwb3N0IiwidXJsIiwiZGF0YSIsInN1Y2Nlc3MiLCJyZXN1bHQiLCJjb2RlIiwid2luZG93IiwibG9jYXRpb24iLCJyZWxvYWQiLCJtZXNzYWdlb2JqIiwibWVzc2FnZSIsImNvbnN0cnVjdG9yIiwiU3RyaW5nIiwibWVzc2FnZUJveCIsImtleSIsImZhaWxlZCIsInJ1biIsImxpc3RlblNtc0V2ZW50Il0sIm1hcHBpbmdzIjoiQUFDQSxTQUFTQSxPQUNNQyxLQUNOQyxZQUFjQyxFQUFFLGlCQUV6QkgsS0FBS0ksVUFBVUMsVUFBWSxXQUNYSixLQUNQQyxZQUFZSSxRQUVyQk4sS0FBS0ksVUFBVUcsVUFBWSxXQUNaTixLQUNOQyxZQUFZTSxRQUVyQlIsS0FBS0ksVUFBVUssY0FBZ0IsV0FDM0JOLEVBQUUsV0FBV08sTUFBTSxXQUNmLElBQUlDLEVBQWdCUixFQUFFLG1CQUNsQlMsRUFBY0QsRUFBY0UsSUFBSSxTQUNwQ0QsRUFBY0UsU0FBU0YsSUFDTixFQUNiRCxFQUFjSSxRQUFRLENBQUNDLEtBQU8sTUFFOUJMLEVBQWNJLFFBQVEsQ0FBQ0MsS0FBTyxjQU8xQ2hCLEtBQUtJLFVBQVVhLG9CQUFzQixXQUNqQyxJQUFJQyxFQUFPakIsS0FDWGtCLFFBQVFDLElBQUksU0FDWixJQUFJQyxFQUFXbEIsRUFBRSxhQUNibUIsRUFBV25CLEVBQUUsYUFDYm9CLEVBQVdwQixFQUFFLGNBQ2JRLEVBQWdCUixFQUFFLG1CQUV0QmtCLEVBQVNYLE1BQU0sV0FDWFEsRUFBS2IsWUFDTE0sRUFBY0UsSUFBSSxDQUFDRyxLQUFPLE1BRTlCTSxFQUFTWixNQUFNLFdBQ1hRLEVBQUtiLFlBQ0xNLEVBQWNFLElBQUksQ0FBQ0csTUFBUSxRQUUvQk8sRUFBU2IsTUFBTSxXQUNYUSxFQUFLWCxlQUtiUCxLQUFLSSxVQUFVb0Isa0JBQW9CLFdBQy9CLElBQUlOLEVBQU9qQixLQUNQd0IsRUFBY3RCLEVBQUUsaUJBQ2hCdUIsRUFBaUJELEVBQVlFLEtBQUssMkJBQ2xDQyxFQUFnQkgsRUFBWUUsS0FBSywwQkFDakNFLEVBQWdCSixFQUFZRSxLQUFLLDBCQUNyQkYsRUFBWUUsS0FBSyxlQUN2QmpCLE1BQU0sV0FDWixJQUFJb0IsRUFBWUosRUFBZUssTUFDM0JDLEVBQVdKLEVBQWNHLE1BQ3pCRSxFQUFXSixFQUFjSyxLQUFLLFdBQVcsRUFBRSxFQUMvQ0MsUUFBUUMsS0FBSyxDQUFDQyxJQUFJLGVBQWVDLEtBQUssQ0FDbENSLFVBQVlBLEVBQ1hFLFNBQVdBLEVBQ1hDLFNBQVdBLEdBRVpNLFFBQVUsU0FBVUMsR0FDaEIsR0FBa0IsS0FBZkEsRUFBT0MsS0FDTnRCLFFBQVFDLElBQUlvQixHQUNadEIsRUFBS1gsWUFDTG1DLE9BQU9DLFNBQVNDLGFBQ2QsQ0FDRixJQUFJQyxFQUFhTCxFQUFPTSxRQUN4QixHQUF5QixpQkFBZEQsR0FBMEJBLEVBQVdFLGFBQWVDLE9BQzNETixPQUFPTyxXQUFXM0MsS0FBS3VDLFFBR3ZCLElBQUlLLE9BQU9MLEVBQVcsQ0FDbEIsSUFFSUMsRUFGV0QsRUFBV0ssS0FDQyxHQUNRLFFBQ25DUixPQUFPTyxXQUFXM0MsS0FBS3dDLE1BTXZDSyxPQUFTLFNBQVVYLEdBQ2ZyQixRQUFRQyxJQUFJb0IsU0FVNUJ4QyxLQUFLSSxVQUFVZ0QsSUFBTSxXQUNqQixJQUFJbEMsRUFBT2pCLEtBQ1hpQixFQUFLRCxzQkFDTEMsRUFBS1QsZ0JBQ0xTLEVBQUtNLG9CQUNMTixFQUFLbUMsa0JBR1RsRCxFQUFFLFlBQ2EsSUFBSUgsTUFDVm9EIiwiZmlsZSI6ImF1dGgubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmZ1bmN0aW9uIEF1dGgoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXNcclxuICAgIHNlbGYubWFza1dyYXBwZXIgPSAkKCcubWFzay13cmFwcGVyJylcclxufTtcclxuQXV0aC5wcm90b3R5cGUuc2hvd0V2ZW50ID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciAgc2VsZiA9IHRoaXNcclxuICAgIHNlbGYubWFza1dyYXBwZXIuc2hvdygpXHJcbn1cclxuQXV0aC5wcm90b3R5cGUuaGlkZUV2ZW50ID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmID0gdGhpc1xyXG4gICAgc2VsZi5tYXNrV3JhcHBlci5oaWRlKClcclxufVxyXG5BdXRoLnByb3RvdHlwZS5zd2l0Y2hXcmFwcGVyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgJChcIi5zd2l0Y2hcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBzY3JvbGxXcmFwcGVyID0gJChcIi5zY3JvbGwtd3JhcHBlclwiKTtcclxuICAgICAgICB2YXIgY3VycmVudExlZnQgPSBzY3JvbGxXcmFwcGVyLmNzcyhcImxlZnRcIik7XHJcbiAgICAgICAgY3VycmVudExlZnQgPSBwYXJzZUludChjdXJyZW50TGVmdCk7XHJcbiAgICAgICAgaWYoY3VycmVudExlZnQgPCAwKXtcclxuICAgICAgICAgICAgc2Nyb2xsV3JhcHBlci5hbmltYXRlKHtcImxlZnRcIjonMCd9KTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgc2Nyb2xsV3JhcHBlci5hbmltYXRlKHtcImxlZnRcIjpcIi00MDBweFwifSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn1cclxuXHJcblxyXG5cclxuQXV0aC5wcm90b3R5cGUubGlzdGVuU2hvd0hpZGVFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpc1xyXG4gICAgY29uc29sZS5sb2coXCJoZWxsb1wiKTtcclxuICAgIHZhciBzaWdpbkJ0biA9ICQoJy5zaWdpbi1pbicpO1xyXG4gICAgdmFyIHNpZ3VwQnRuID0gJCgnLnNpZ2luLXVwJyk7XHJcbiAgICB2YXIgY2xvc2VCdG4gPSAkKCcuY2xvc2UtYnRuJyk7XHJcbiAgICB2YXIgc2Nyb2xsV3JhcHBlciA9ICQoJy5zY3JvbGwtd3JhcHBlcicpXHJcblxyXG4gICAgc2lnaW5CdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuc2hvd0V2ZW50KClcclxuICAgICAgICBzY3JvbGxXcmFwcGVyLmNzcyh7XCJsZWZ0XCI6MH0pXHJcbiAgICB9KVxyXG4gICAgc2lndXBCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuc2hvd0V2ZW50KClcclxuICAgICAgICBzY3JvbGxXcmFwcGVyLmNzcyh7XCJsZWZ0XCI6LTQwMH0pXHJcbiAgICB9KVxyXG4gICAgY2xvc2VCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuaGlkZUV2ZW50KClcclxuXHJcbiAgICB9KVxyXG59XHJcblxyXG5BdXRoLnByb3RvdHlwZS5saXN0ZW5TaWduaW5FdmVudCA9IGZ1bmN0aW9uICgpe1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzXHJcbiAgICB2YXIgc2lnbmluR3JvdXAgPSAkKCcuc2lnbmluLWdyb3VwJylcclxuICAgIHZhciB0ZWxlcGhvbmVJbnB1dCA9IHNpZ25pbkdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSd0ZWxlcGhvbmUnXVwiKTtcclxuICAgIHZhciBwYXNzd29yZElucHV0ID0gc2lnbmluR3JvdXAuZmluZChcImlucHV0W25hbWU9J3Bhc3N3b3JkJ11cIik7XHJcbiAgICB2YXIgcmVtZW1iZXJJbnB1dCA9IHNpZ25pbkdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSdyZW1lbWJlciddXCIpO1xyXG4gICAgdmFyIHN1Ym1pdEJ0biA9IHNpZ25pbkdyb3VwLmZpbmQoXCIuc3VibWl0LWJ0blwiKTtcclxuICAgIHN1Ym1pdEJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIHRlbGVwaG9uZSA9IHRlbGVwaG9uZUlucHV0LnZhbCgpXHJcbiAgICAgICAgdmFyIHBhc3N3b3JkID0gcGFzc3dvcmRJbnB1dC52YWwoKVxyXG4gICAgICAgIHZhciByZW1lbWJlciA9IHJlbWVtYmVySW5wdXQucHJvcChcImNoZWNrZWRcIik/MTowXHJcbiAgICAgICAgeGZ6YWpheC5wb3N0KHt1cmw6Jy9hdXRoL2xvZ2luLycsZGF0YTp7XHJcbiAgICAgICAgICAgICd0ZWxlcGhvbmUnOnRlbGVwaG9uZSxcclxuICAgICAgICAgICAgICdwYXNzd29yZCc6cGFzc3dvcmQsXHJcbiAgICAgICAgICAgICAncmVtZW1iZXInOnJlbWVtYmVyLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAnc3VjY2Vzcyc6ZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgaWYocmVzdWx0LmNvZGUgPT0gMjAwKXtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpXHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5oaWRlRXZlbnQoKVxyXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKVxyXG4gICAgICAgICAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlb2JqID0gcmVzdWx0Lm1lc3NhZ2VcclxuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1lc3NhZ2VvYmogPT0gXCJzdHJpbmdcIiB8fCBtZXNzYWdlb2JqLmNvbnN0cnVjdG9yID09IFN0cmluZyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5tZXNzYWdlQm94LnNob3cobWVzc2FnZW9iailcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcihrZXkgaW4gbWVzc2FnZW9iail7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZXMgPSBtZXNzYWdlb2JqW2tleV1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlZGljdCA9IG1lc3NhZ2VzWzBdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZSA9IG1lc3NhZ2VkaWN0WydtZXNzYWdlJ11cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5tZXNzYWdlQm94LnNob3cobWVzc2FnZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdmYWlsZWQnOmZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICApXHJcbiAgICB9KVxyXG5cclxufVxyXG5cclxuXHJcblxyXG5BdXRoLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXNcclxuICAgIHNlbGYubGlzdGVuU2hvd0hpZGVFdmVudCgpXHJcbiAgICBzZWxmLnN3aXRjaFdyYXBwZXIoKVxyXG4gICAgc2VsZi5saXN0ZW5TaWduaW5FdmVudCgpXHJcbiAgICBzZWxmLmxpc3RlblNtc0V2ZW50KClcclxufTtcclxuXHJcbiQoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGF1dGggPSBuZXcgQXV0aCgpO1xyXG4gICAgYXV0aC5ydW4oKTtcclxufSlcclxuXHJcblxyXG4iXX0=
