function Banner(){this.bannerGroup=$("#banner-group"),this.listenBannerHover(),this.bannerUl=$("#banner-ul"),this.rightArrow=$(".right-arrow"),this.leftArrow=$(".left-arrow"),this.liList=this.bannerUl.children("li"),this.liCount=this.liList.length,this.pageControl=$(".page-control")}function Index(){var t=this;t.page=2,t.category_id=0,t.loadBtn=$("#load-more-btn"),template.defaults.imports.timeSince=function(t){var n=new Date(t),e=n.getTime(),i=((new Date).getTime()-e)/1e3;return i<60?"刚刚":60<=i&&i<3600?(minutes=parseInt(i/60),minutes+"分钟前"):3600<=i&&i<86400?(hours=parseInt(i/60/60),hours+"小时前"):86400<=i&&i<2592e3?(days=parseInt(i/60/60/24),days+"天前"):n.getFullYear()+n.getMonth()+n.getDay()+n.getHours()}}Banner.prototype.initbannerul=function(){this.bannerUl.css({width:798*this.liCount})},Banner.prototype.initPageControl=function(){for(var t=this,n=0;n<t.liCount;n++){var e=$("<li></li>");t.pageControl.append(e),0===n&&e.addClass("active")}t.pageControl.css({width:10*t.liCount+16+16*t.liCount})},Banner.prototype.listenPageControl=function(){var e=this;e.pageControl.children("li").each(function(t,n){$(n).click(function(){e.index=t,e.animate(),$(n).addClass("active").siblings().removeClass("active")})})},Banner.prototype.toggleArrow=function(t){var n=this;t?(n.leftArrow.show(),n.rightArrow.show()):(n.rightArrow.hide(),n.leftArrow.hide())},Banner.prototype.animate=function(){this.bannerUl.animate({left:-798*this.index}),this.pageControl.children("li").eq(this.index).addClass("active").siblings().removeClass("active")},Banner.prototype.arrowClick=function(){var t=this;this.rightArrow.click(function(){console.log(t.index),t.index===t.liCount-1?t.index=0:t.index++,t.animate()}),this.leftArrow.click(function(){0===t.index?t.index=t.liCount-1:t.index--,t.animate()})},Banner.prototype.listenBannerHover=function(){var t=this;this.bannerGroup.hover(function(){clearInterval(t.timer),t.toggleArrow(!0)},function(){t.loop(),t.toggleArrow(!1)})},Banner.prototype.loop=function(){var t=this;t.index=1,t.timer=setInterval(function(){t.index==t.liCount&&(t.index=0),t.animate(),t.index++},2e3)},Banner.prototype.run=function(){this.loop(),this.initPageControl(),this.initbannerul(),this.listenPageControl()},Index.prototype.listenLoadmoreBtn=function(){var i=this;i.loadBtn.click(function(){xfzajax.get({url:"/news/list/",data:{p:i.page},success:function(t){if(200===t.code){var n=t.data;if(0<n.length){var e=template("news-item",{newses:n});$(".list-inner-group").append(e),i.page+=1}else i.loadBtn.hide()}}})})},Index.prototype.listenCategorySwitchEvent=function(){var a=this;$(".list-tab").children().click(function(){var r=$(this),o=r.attr("data-category");xfzajax.get({url:"/news/list/",data:{category_id:o,p:1},success:function(t){if(200===t.code){var n=t.data,e=template("news-item",{newses:n}),i=$(".list-inner-group");i.empty(),i.append(e),a.page=2,a.category_id=o,r.addClass("active").siblings().removeClass("active"),a.loadBtn.show()}}})})},Index.prototype.run=function(){this.listenLoadmoreBtn(),this.listenCategorySwitchEvent()},$(function(){var t=new Banner;t.arrowClick(),t.run(),(new Index).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
