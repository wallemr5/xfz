function FrontBase(){}function Auth(){this.maskWrapper=$(".mask-wrapper"),this.smsCapacha=$(".sms-captcha-btn")}FrontBase.prototype.listenAuthBoxHover=function(){var e=$(".auth-box"),t=$(".user-more-box");e.hover(function(){t.show()},function(){t.hide()})},FrontBase.prototype.run=function(){self=this,self.listenAuthBoxHover()},$(function(){(new FrontBase).run()}),Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.switchWrapper=function(){$(".switch").click(function(){var e=$(".scroll-wrapper"),t=e.css("left");(t=parseInt(t))<0?e.animate({left:"0"}):e.animate({left:"-400px"})})},Auth.prototype.listenShowHideEvent=function(){var e=this;console.log("hello");var t=$(".sigin-in"),n=$(".sigin-up"),s=$(".close-btn"),a=$(".scroll-wrapper");t.click(function(){e.showEvent(),a.css({left:0})}),n.click(function(){e.showEvent(),a.css({left:-400})}),s.click(function(){e.hideEvent()})},Auth.prototype.listenSigninEvent=function(){var s=this,e=$(".signin-group"),a=e.find("input[name='telephone']"),o=e.find("input[name='password']"),i=e.find("input[name='remember']");e.find(".submit-btn").click(function(){var e=a.val(),t=o.val(),n=i.prop("checked")?1:0;xfzajax.post({url:"/auth/login/",data:{telephone:e,password:t,remember:n},success:function(e){if(200==e.code)console.log(e),s.hideEvent(),window.location.reload();else{var t=e.message;if("string"==typeof t||t.constructor==String)window.messageBox.show(t);else for(key in t){var n=t[key][0].message;window.messageBox.show(n)}}},failed:function(e){console.log(e)}})})},Auth.prototype.listenImgCapacha=function(){imgCapacha=$(".img-captcha"),imgCapacha.click(function(){imgCapacha.attr("src","/auth/img_captcha?random="+Math.random())})},Auth.prototype.smsSuccessEvent=function(){self=this,messageBox.showInfo("验证码已发送"),self.smsCapacha.addClass("disabled");var e=5;self.smsCapacha.unbind("click");var t=setInterval(function(){self.smsCapacha.text(e+"s"),--e<=0&&(clearInterval(t),self.smsCapacha.text("发送验证码"),self.smsCapacha.removeClass("disabled"),self.listenSmsEvent())},1e3)},Auth.prototype.listenSmsEvent=function(){self=this;var t=$(".signup-group").find('input[name="telephone"]');console.log(t),self.smsCapacha.click(function(){console.log("sms");var e=t.val();console.log(t),console.log(e),e?xfzajax.get({url:"/auth/send_message/",data:{telephone:e},success:function(e){console.log(e),200===e.code&&self.smsSuccessEvent()}}):messageBox.showError("请输入手机号码")})},Auth.prototype.listenRegister=function(){var e=$(".signup-group"),i=e.find("input[name='telephone']"),c=e.find("input[name='username']"),r=e.find("input[name='img_captcha']"),l=e.find("input[name='password1']"),p=e.find("input[name='password2']"),u=e.find("input[name='sms_captcha']");e.find(".submit-btn").click(function(){var e=i.val(),t=l.val(),n=p.val(),s=c.val(),a=r.val(),o=u.val();xfzajax.post({url:"/auth/register/",data:{telephone:e,password1:t,password2:n,username:s,img_captcha:a,sms_captcha:o},success:function(){console.log(result),self.hideEvent(),window.location.reload()}})})},Auth.prototype.run=function(){var e=this;e.listenShowHideEvent(),e.switchWrapper(),e.listenSigninEvent(),e.listenImgCapacha(),e.listenSmsEvent(),e.listenRegister()},$(function(){(new Auth).run()}),$(function(){window.template&&(template.defaults.imports.timeSince=function(e){var t=new Date(e),n=t.getTime(),s=((new Date).getTime()-n)/1e3;return s<60?"刚刚":60<=s&&s<3600?(minutes=parseInt(s/60),minutes+"分钟前"):3600<=s&&s<86400?(hours=parseInt(s/60/60),hours+"小时前"):86400<=s&&s<2592e3?(days=parseInt(s/60/60/24),days+"天前"):t.getFullYear()+"/"+t.getMonth()+"/"+t.getDay()+" "+t.getHours()+":"+t.getMinutes()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
